FROM nvidia/cuda:10.1-devel-ubuntu18.04

RUN apt-get update && \
        apt-get install -y software-properties-common && \
        add-apt-repository ppa:deadsnakes/ppa && \
        apt-get update -y  && \
        apt-get install -y --no-install-recommends build-essential python3.6 python3.6-dev python3-distutils \
        curl vim git openssh-client openssh-server \
        libcudnn7=7.6.5.32-1+cuda10.1\
        libnccl2=2.4.8-1+cuda10.1 \
        libnccl-dev=2.4.8-1+cuda10.1 \
        libnvinfer6=6.0.1-1+cuda10.1 \
        libnvinfer-dev=6.0.1-1+cuda10.1 \
        libnvinfer-plugin6=6.0.1-1+cuda10.1 \
        libjpeg-dev \
        libpng-dev \
        librdmacm1 \
        libibverbs1 \
        ibverbs-providers && \
        mkdir -p /var/run/sshd && \
        mkdir -p /root/work && \
        curl -fSsL https://bootstrap.pypa.io/get-pip.py | python3.6 && \
        python3.6 -m pip install pip --upgrade && \
        python3.6 -m pip install wheel && \
        ln -s /usr/bin/python3.6 /usr/bin/python && \
        rm -rf /var/lib/apt/lists/*

# Install Open MPI
RUN mkdir /tmp/openmpi && \
    cd /tmp/openmpi && \
    curl -fSsL -O https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && \
    tar zxf openmpi-4.0.0.tar.gz && \
    cd openmpi-4.0.0 && \
    ./configure --enable-orterun-prefix-by-default && \
    make -j $(nproc) all && \
    make install && \
    ldconfig && \
    rm -rf /tmp/openmpi

# Install Tensorflow and Horovod
RUN pip install --no-cache-dir tensorflow-gpu==2.1.0

RUN HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod==0.19.1


# Install Model Optimimzer
RUN pip install  --no-cache-dir jsonschema==3.1.1 && \
    pip install  --no-cache-dir networkx==2.4 && \
    pip install  --no-cache-dir mpi4py==3.0.3 && \
    mkdir /tmp/model_optimizer && \
    cd /tmp/model_optimizer && \
    git clone https://github.com/Adlik/model_optimizer.git && \
    cd model_optimizer && \
    python3.6 setup.py install && \
    mkdir -p /root/work && \
    cp -rf examples /root/work/. && \
    cp -rf tools /root/work/. && \
    cp -rf /tmp/model_optimizer /root/work/. && \
    rm -rf /tmp/model_optimizer


WORKDIR "/root/work/examples"
